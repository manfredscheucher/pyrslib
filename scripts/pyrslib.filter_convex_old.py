#!/usr/bin/python2
# author: Manfred Scheucher (2016-2023)

from pyrslib import BasicScript, RotationSystem

from pyrslib.RotationSystemTextReader import RotationSystemTextReader
from pyrslib.RotationSystemBinaryReader import RotationSystemBinaryReader
from pyrslib.RotationSystemTextWriter import RotationSystemTextWriter
from pyrslib.RotationSystemBinaryWriter import RotationSystemBinaryWriter

class UnifyRSScript(BasicScript.BasicScript): 

	def __init__(self):
		super(UnifyRSScript,self).__init__()
		self.hconvex = int(self.arguments.get("hconvex",0))
		self.fconvex = int(self.arguments.get("fconvex",0))
		if self.fconvex: self.hconvex = self.fconvex 

		self.complement = int(self.arguments.get("complement",0))


		if not self.complement:
			self.outfile_suffix = ".fconvex" if self.fconvex else (".hconvex" if self.hconvex else ".convex")
		else:
			self.outfile_suffix = ".notfconvex" if self.fconvex else (".nothconvex" if self.hconvex else ".notconvex")

		self.convex_count = 0

		self.hconvex_obstruction7 = [[1, 2, 3, 4, 5], [0, 2, 3, 4, 5], [0, 1, 5, 3, 4], [0, 1, 2, 4, 5], [0, 1, 2, 3, 5], [0, 1, 3, 4, 2]]
		self.hconvex_obstruction7str = RotationSystem.RotationSystem(7,self.hconvex_obstruction7).to_string()

		self.fconvex_obstructions7 = [
				[[1, 2, 3, 4, 5, 6], [0, 3, 4, 5, 6, 2], [0, 4, 1, 6, 5, 3], [0, 2, 6, 5, 4, 1], [0, 3, 5, 6, 1, 2], [0, 4, 3, 2, 6, 1], [0, 4, 5, 3, 2, 1]],
				[[1, 2, 3, 4, 5, 6], [0, 3, 5, 4, 6, 2], [0, 5, 1, 6, 4, 3], [0, 2, 6, 4, 5, 1], [0, 3, 2, 6, 1, 5], [0, 3, 4, 6, 1, 2], [0, 5, 4, 3, 2, 1]],
				[[1, 2, 3, 4, 5, 6], [0, 4, 5, 6, 2, 3], [0, 1, 5, 6, 4, 3], [0, 1, 2, 6, 4, 5], [0, 3, 2, 6, 5, 1], [0, 3, 4, 6, 2, 1], [0, 5, 4, 3, 2, 1]],
				[[1, 2, 3, 4, 5, 6], [0, 4, 5, 6, 3, 2], [0, 5, 1, 6, 3, 4], [0, 2, 1, 6, 5, 4], [0, 2, 3, 6, 5, 1], [0, 4, 3, 6, 1, 2], [0, 5, 4, 3, 2, 1]],
			]
		self.fconvex_obstructions7strs = set(RotationSystem.RotationSystem(7,o).to_string() for o in self.fconvex_obstructions7)

		self.fconvex_obstructions8 = [
				[[1,2,3,4,5,6,7],[0,3,4,5,6,7,2],[0,1,5,6,7,4,3],[0,2,7,4,5,6,1],[0,3,2,7,5,6,1],[0,3,4,7,6,2,1],[0,3,4,5,7,2,1],[0,6,5,4,3,2,1]],
				[[1,2,3,4,5,6,7],[0,3,4,5,6,7,2],[0,1,5,7,6,3,4],[0,2,7,6,5,4,1],[0,2,3,5,6,7,1],[0,4,3,6,7,2,1],[0,4,5,3,2,7,1],[0,4,5,6,3,2,1]],
				[[1,2,3,4,5,6,7],[0,3,4,5,6,7,2],[0,1,6,7,4,5,3],[0,2,7,4,5,6,1],[0,3,2,7,5,6,1],[0,3,2,4,7,6,1],[0,3,4,5,7,2,1],[0,6,5,4,3,2,1]],
				[[1,2,3,4,5,6,7],[0,3,4,5,7,6,2],[0,1,7,6,4,3,5],[0,2,6,4,5,7,1],[0,3,2,6,5,7,1],[0,2,3,4,6,7,1],[0,5,4,3,2,1,7],[0,3,4,5,6,2,1]],
				[[1,2,3,4,5,6,7],[0,3,4,5,7,6,2],[0,1,7,6,3,5,4],[0,2,6,5,4,7,1],[0,2,3,6,5,7,1],[0,4,2,3,6,7,1],[0,5,4,3,2,1,7],[0,3,4,5,6,2,1]],
				[[1,2,3,4,5,6,7],[0,3,4,5,7,6,2],[0,1,7,6,5,3,4],[0,2,6,5,4,7,1],[0,2,3,6,5,7,1],[0,4,3,2,6,7,1],[0,5,4,3,2,1,7],[0,3,4,5,6,2,1]],
				[[1,2,3,4,5,6,7],[0,3,4,5,6,7,2],[0,1,6,5,7,3,4],[0,2,7,6,5,4,1],[0,2,3,5,6,7,1],[0,4,3,7,2,6,1],[0,4,5,3,7,2,1],[0,4,6,5,3,2,1]],
				[[1,2,3,4,5,6,7],[0,3,4,5,6,7,2],[0,1,6,7,5,3,4],[0,2,7,5,4,6,1],[0,2,3,7,5,6,1],[0,4,3,2,7,6,1],[0,3,4,5,7,2,1],[0,6,5,4,3,2,1]],
				[[1,2,3,4,5,6,7],[0,3,4,6,7,5,2],[0,1,7,5,6,3,4],[0,2,5,6,4,7,1],[0,2,3,5,6,7,1],[0,4,3,2,1,7,6],[0,4,3,2,5,7,1],[0,3,4,6,5,2,1]],
				[[1,2,3,4,5,6,7],[0,3,4,5,6,7,2],[0,1,5,7,6,3,4],[0,2,7,6,4,5,1],[0,2,3,7,6,5,1],[0,3,4,6,7,2,1],[0,5,4,3,2,7,1],[0,5,6,4,3,2,1]],
				[[1,2,3,4,5,6,7],[0,3,4,5,6,7,2],[0,1,5,7,6,3,4],[0,2,7,6,5,4,1],[0,2,3,7,6,5,1],[0,4,3,6,7,2,1],[0,5,4,3,2,7,1],[0,5,6,4,3,2,1]],
				[[1,2,3,4,5,6,7],[0,3,4,5,6,7,2],[0,1,6,7,4,5,3],[0,2,7,6,4,5,1],[0,3,2,7,6,5,1],[0,3,2,4,7,6,1],[0,5,4,3,7,2,1],[0,6,5,4,3,2,1]],
				[[1,2,3,4,5,6,7],[0,3,4,5,6,7,2],[0,1,5,7,6,3,4],[0,2,7,6,4,5,1],[0,2,3,6,7,5,1],[0,3,4,6,7,2,1],[0,5,4,3,2,7,1],[0,5,4,6,3,2,1]],
				[[1,2,3,4,5,6,7],[0,3,4,5,6,7,2],[0,1,4,5,7,6,3],[0,2,7,6,4,5,1],[0,3,6,7,5,2,1],[0,3,4,6,7,2,1],[0,5,4,3,2,7,1],[0,5,4,6,3,2,1]],
				[[1,2,3,4,5,6,7],[0,4,5,6,7,2,3],[0,1,6,5,7,4,3],[0,1,5,6,2,7,4],[0,3,2,7,5,6,1],[0,4,7,2,6,3,1],[0,4,5,7,2,3,1],[0,6,5,4,3,2,1]],
				[[1,2,3,4,5,6,7],[0,3,4,5,7,6,2],[0,1,7,6,4,5,3],[0,2,6,7,4,5,1],[0,3,2,6,7,5,1],[0,3,2,4,6,7,1],[0,5,4,3,2,1,7],[0,5,4,3,6,2,1]],
				[[1,2,3,4,5,6,7],[0,4,5,6,7,2,3],[0,1,6,7,4,3,5],[0,1,2,7,6,4,5],[0,3,2,7,6,5,1],[0,2,3,4,6,7,1],[0,5,4,3,7,2,1],[0,5,6,4,3,2,1]],
				[[1,2,3,4,5,6,7],[0,4,5,6,7,2,3],[0,1,6,5,7,4,3],[0,1,2,7,5,6,4],[0,3,2,7,5,6,1],[0,4,3,7,2,6,1],[0,4,3,5,7,2,1],[0,6,5,4,3,2,1]],
				[[1,2,3,4,5,6,7],[0,3,4,5,7,6,2],[0,1,7,6,3,5,4],[0,2,6,7,5,4,1],[0,2,3,6,7,5,1],[0,4,2,3,6,7,1],[0,5,4,3,2,1,7],[0,5,4,3,6,2,1]],
				[[1,2,3,4,5,6,7],[0,3,4,6,5,7,2],[0,1,6,7,5,3,4],[0,2,7,5,4,6,1],[0,2,3,7,5,6,1],[0,4,3,2,7,1,6],[0,3,4,5,7,2,1],[0,6,5,4,3,2,1]],
				[[1,2,3,4,5,6,7],[0,3,4,7,5,6,2],[0,1,7,6,5,3,4],[0,2,6,5,4,7,1],[0,2,3,5,6,7,1],[0,4,3,2,6,1,7],[0,4,5,3,2,1,7],[0,3,4,5,6,2,1]],
				[[1,2,3,4,5,6,7],[0,4,5,6,7,3,2],[0,1,6,7,3,5,4],[0,2,1,6,7,5,4],[0,2,3,7,5,6,1],[0,4,2,3,7,6,1],[0,4,5,7,3,2,1],[0,6,5,4,3,2,1]],
				[[1,2,3,4,5,6,7],[0,4,5,6,7,2,3],[0,1,6,7,3,5,4],[0,1,2,6,7,5,4],[0,2,3,7,5,6,1],[0,4,2,3,7,6,1],[0,4,5,7,3,2,1],[0,6,5,4,3,2,1]],
				[[1,2,3,4,5,6,7],[0,3,4,5,6,7,2],[0,1,6,5,7,3,4],[0,2,7,6,5,4,1],[0,2,3,7,6,5,1],[0,4,3,7,2,6,1],[0,5,4,3,7,2,1],[0,6,5,4,3,2,1]],
				[[1,2,3,4,5,6,7],[0,4,5,6,7,2,3],[0,1,6,5,7,3,4],[0,1,2,7,6,5,4],[0,2,3,7,6,5,1],[0,4,3,7,2,6,1],[0,5,4,3,7,2,1],[0,6,5,4,3,2,1]],
				[[1,2,3,4,5,6,7],[0,4,5,6,7,2,3],[0,1,5,7,6,3,4],[0,1,2,7,6,4,5],[0,2,3,7,6,5,1],[0,3,4,6,7,2,1],[0,5,4,3,2,7,1],[0,5,6,4,3,2,1]],
				[[1,2,3,4,5,6,7],[0,3,4,6,7,5,2],[0,1,7,6,5,3,4],[0,2,5,7,6,4,1],[0,2,3,5,7,6,1],[0,4,3,2,1,7,6],[0,4,3,5,2,7,1],[0,6,4,3,5,2,1]],
				[[1,2,3,4,5,6,7],[0,3,4,7,5,6,2],[0,1,7,6,5,3,4],[0,2,6,5,4,7,1],[0,2,3,6,5,7,1],[0,4,3,2,6,1,7],[0,5,4,3,2,1,7],[0,3,4,5,6,2,1]],
				[[1,2,3,4,5,6,7],[0,3,4,7,5,6,2],[0,7,1,5,6,4,3],[0,2,6,5,4,7,1],[0,3,2,6,5,7,1],[0,4,3,6,2,1,7],[0,5,4,3,2,1,7],[0,3,4,5,6,1,2]],
				[[1,2,3,4,5,6,7],[0,3,4,5,7,6,2],[0,1,7,6,5,3,4],[0,2,6,7,5,4,1],[0,2,3,6,7,5,1],[0,4,3,2,6,7,1],[0,5,4,3,2,1,7],[0,5,4,3,6,2,1]],
				[[1,2,3,4,5,6,7],[0,4,5,6,7,2,3],[0,1,5,7,6,3,4],[0,1,2,7,6,5,4],[0,2,3,7,6,5,1],[0,4,3,6,7,2,1],[0,5,4,3,2,7,1],[0,5,6,4,3,2,1]],
				[[1,2,3,4,5,6,7],[0,3,4,5,7,6,2],[0,1,7,6,4,3,5],[0,2,6,7,4,5,1],[0,3,2,6,7,5,1],[0,2,3,4,6,7,1],[0,5,4,3,2,1,7],[0,5,4,3,6,2,1]],
				[[1,2,3,4,5,6,7],[0,3,4,6,7,5,2],[0,1,7,5,6,3,4],[0,2,5,7,6,4,1],[0,2,3,5,7,6,1],[0,4,3,2,1,7,6],[0,4,3,2,5,7,1],[0,6,4,3,5,2,1]],
				[[1,2,3,4,5,6,7],[0,4,5,6,7,2,3],[0,1,6,7,5,3,4],[0,1,2,7,6,5,4],[0,2,3,7,6,5,1],[0,4,3,2,7,6,1],[0,5,4,3,7,2,1],[0,6,5,4,3,2,1]],
				[[1,2,3,4,5,6,7],[0,3,4,5,6,7,2],[0,1,6,7,5,3,4],[0,2,7,6,5,4,1],[0,2,3,7,6,5,1],[0,4,3,2,7,6,1],[0,5,4,3,7,2,1],[0,6,5,4,3,2,1]],
				[[1,2,3,4,5,6,7],[0,3,4,7,6,5,2],[0,1,7,5,6,3,4],[0,2,5,6,7,4,1],[0,2,3,5,6,7,1],[0,4,3,2,1,7,6],[0,4,3,2,5,1,7],[0,4,3,6,5,2,1]],
				[[1,2,3,4,5,6,7],[0,3,4,7,6,5,2],[0,1,5,7,6,3,4],[0,2,5,6,7,4,1],[0,2,3,5,6,7,1],[0,4,3,2,1,7,6],[0,4,3,2,5,1,7],[0,4,3,6,2,5,1]],
				[[1,2,3,4,5,6,7],[0,4,5,6,7,2,3],[0,1,5,6,7,3,4],[0,1,2,6,7,5,4],[0,2,3,7,6,5,1],[0,4,3,7,6,2,1],[0,5,4,7,3,2,1],[0,6,5,4,3,2,1]],
				[[1,2,3,4,5,6,7],[0,4,5,6,7,2,3],[0,1,6,5,7,3,4],[0,1,2,6,7,5,4],[0,2,3,7,6,5,1],[0,4,3,7,2,6,1],[0,5,4,7,3,2,1],[0,6,5,4,3,2,1]],
				[[1,2,3,4,5,6,7],[0,4,5,6,7,2,3],[0,1,6,7,4,3,5],[0,1,2,6,7,4,5],[0,3,2,7,6,5,1],[0,2,3,4,7,6,1],[0,5,4,7,3,2,1],[0,6,5,4,3,2,1]],
				[[1,2,3,4,5,6,7],[0,4,5,6,7,2,3],[0,1,6,7,4,5,3],[0,1,2,6,7,4,5],[0,3,2,7,6,5,1],[0,3,2,4,7,6,1],[0,5,4,7,3,2,1],[0,6,5,4,3,2,1]],
				[[1,2,3,4,5,6,7],[0,4,5,6,7,2,3],[0,1,6,7,4,3,5],[0,1,2,7,6,4,5],[0,3,2,7,6,5,1],[0,2,3,4,7,6,1],[0,5,4,3,7,2,1],[0,6,5,4,3,2,1]],
				[[1,2,3,4,5,6,7],[0,4,5,6,7,2,3],[0,1,6,7,3,4,5],[0,1,2,6,7,5,4],[0,2,3,7,6,5,1],[0,2,4,3,7,6,1],[0,5,4,7,3,2,1],[0,6,5,4,3,2,1]],
				[[1,2,3,4,5,6,7],[0,3,4,7,5,6,2],[0,1,6,7,5,3,4],[0,2,6,5,7,4,1],[0,2,3,6,5,7,1],[0,4,3,2,6,1,7],[0,5,4,3,2,1,7],[0,4,3,5,2,6,1]],
				[[1,2,3,4,5,6,7],[0,4,5,6,7,2,3],[0,1,6,7,3,5,4],[0,1,2,6,7,5,4],[0,2,3,7,6,5,1],[0,4,2,3,7,6,1],[0,5,4,7,3,2,1],[0,6,5,4,3,2,1]],
				[[1,2,3,4,5,6,7],[0,4,5,6,7,2,3],[0,1,6,7,5,4,3],[0,1,2,7,6,4,5],[0,3,2,7,6,5,1],[0,3,4,2,7,6,1],[0,5,4,3,7,2,1],[0,6,5,4,3,2,1]],
				[[1,2,3,4,5,6,7],[0,3,4,6,5,7,2],[0,1,7,6,5,3,4],[0,2,7,5,6,4,1],[0,2,3,7,5,6,1],[0,4,3,2,7,1,6],[0,4,3,5,2,7,1],[0,6,5,4,3,2,1]],
				[[1,2,3,4,5,6,7],[0,3,4,7,5,6,2],[0,1,7,6,5,3,4],[0,2,6,5,7,4,1],[0,2,3,6,5,7,1],[0,4,3,2,6,1,7],[0,5,4,3,2,1,7],[0,4,3,5,6,2,1]],
				[[1,2,3,4,5,6,7],[0,5,4,7,6,2,3],[0,1,7,6,4,3,5],[0,1,2,7,6,4,5],[0,3,2,6,7,1,5],[0,2,3,4,6,7,1],[0,5,4,3,2,1,7],[0,5,4,6,3,2,1]],
				[[1,2,3,4,5,6,7],[0,4,5,7,6,2,3],[0,1,7,6,4,3,5],[0,1,2,7,6,4,5],[0,3,2,6,7,5,1],[0,2,3,4,6,7,1],[0,5,4,3,2,1,7],[0,5,4,6,3,2,1]],
				[[1,2,3,4,5,6,7],[0,4,5,7,6,2,3],[0,1,7,6,5,4,3],[0,1,2,7,6,4,5],[0,3,2,6,7,5,1],[0,3,4,2,6,7,1],[0,5,4,3,2,1,7],[0,5,4,6,3,2,1]],
				[[1,2,3,4,5,6,7],[0,4,5,7,6,2,3],[0,1,7,6,3,4,5],[0,1,2,7,6,5,4],[0,2,3,6,7,5,1],[0,2,4,3,6,7,1],[0,5,4,3,2,1,7],[0,5,4,6,3,2,1]],
			]
		self.fconvex_obstructions8strs = set(RotationSystem.RotationSystem(8,o).to_string() for o in self.fconvex_obstructions8)


		
	def _print_usage_info(self,rs):
		print "description:"
		print "\tthis script can be used to enumerate all subrotation systems"
		print "parameters:"
		print "\tconvex (convex 0)\t- filter convex"
		print "\thconvex (default 0)\t- filter h-convex"
		print "\tfconvex (default 0)\t- filter f-convex (necessary conditions, not sure if sufficient yet)"
		print "\tcomplement (default 0)\t- filter complement, that is, obstructions"


	def _action_inner(self,rs):
		convex = True
		for sub_rs in rs.enumerate_sub_rotation_systems(5):
			sub_rs = sub_rs.calculate_lexmin()
			if sub_rs.orientations[3][3] == 2:
				convex = False
				if self.DEBUG: print "convex obstruction"
				break

		if convex and self.hconvex:
			for sub_rs in rs.enumerate_sub_rotation_systems(6):
				sub_rs = sub_rs.calculate_lexmin()
				if sub_rs.orientations == self.hconvex_obstruction7:
					convex = False
					if self.DEBUG: print "hconvex_obstruction7"
					break

		if convex and self.fconvex:
			for sub_rs in rs.enumerate_sub_rotation_systems(7):
				sub_rs = sub_rs.calculate_lexmin()
				#if sub_rs.orientations in self.fconvex_obstructions7:
				if sub_rs.to_string() in self.fconvex_obstructions7strs:
					convex = False
					if self.DEBUG: print "fconvex_obstructions7"
					break

		if convex and self.fconvex:
			for sub_rs in rs.enumerate_sub_rotation_systems(8):
				sub_rs = sub_rs.calculate_lexmin()
				#if sub_rs.orientations in self.fconvex_obstructions8:
				if sub_rs.to_string() in self.fconvex_obstructions8strs:
					convex = False
					if self.DEBUG: print "fconvex_obstructions8"
					break

		if convex:
			self.convex_count += 1
			if not self.complement:
				self.writer.write(rs)

		if not convex and self.complement:
			self.writer.write(rs)
		
		if self.DEBUG: print "so far:","fconvex" if self.fconvex else ("hconvex" if self.hconvex else "convex"),":",self.convex_count,"of",self.count

	def _action_end(self): 
		print "fconvex" if self.fconvex else ("hconvex" if self.hconvex else "convex"),":",self.convex_count,"of",self.count


if __name__ == "__main__": UnifyRSScript().action()
