# author: Manfred Scheucher (2016-2023)

import RotationSystem

_hconvex_obstruction6 = [[1, 2, 3, 4, 5], [0, 2, 3, 4, 5], [0, 1, 5, 3, 4], [0, 1, 2, 4, 5], [0, 1, 2, 3, 5], [0, 1, 3, 4, 2]]
_hconvex_obstruction6str = RotationSystem.RotationSystem(6,_hconvex_obstruction6).to_string()

_fconvex_obstructions7 = [
		[[1, 2, 3, 4, 5, 6], [0, 3, 4, 5, 6, 2], [0, 4, 1, 6, 5, 3], [0, 2, 6, 5, 4, 1], [0, 3, 5, 6, 1, 2], [0, 4, 3, 2, 6, 1], [0, 4, 5, 3, 2, 1]],
		[[1, 2, 3, 4, 5, 6], [0, 3, 5, 4, 6, 2], [0, 5, 1, 6, 4, 3], [0, 2, 6, 4, 5, 1], [0, 3, 2, 6, 1, 5], [0, 3, 4, 6, 1, 2], [0, 5, 4, 3, 2, 1]],
		[[1, 2, 3, 4, 5, 6], [0, 4, 5, 6, 2, 3], [0, 1, 5, 6, 4, 3], [0, 1, 2, 6, 4, 5], [0, 3, 2, 6, 5, 1], [0, 3, 4, 6, 2, 1], [0, 5, 4, 3, 2, 1]],
		[[1, 2, 3, 4, 5, 6], [0, 4, 5, 6, 3, 2], [0, 5, 1, 6, 3, 4], [0, 2, 1, 6, 5, 4], [0, 2, 3, 6, 5, 1], [0, 4, 3, 6, 1, 2], [0, 5, 4, 3, 2, 1]],
	]
_fconvex_obstructions7strs = set(RotationSystem.RotationSystem(7,o).to_string() for o in _fconvex_obstructions7)

_fconvex_obstructions8 = [
		[[1,2,3,4,5,6,7],[0,3,4,5,6,7,2],[0,1,5,6,7,4,3],[0,2,7,4,5,6,1],[0,3,2,7,5,6,1],[0,3,4,7,6,2,1],[0,3,4,5,7,2,1],[0,6,5,4,3,2,1]],
		[[1,2,3,4,5,6,7],[0,3,4,5,6,7,2],[0,1,5,7,6,3,4],[0,2,7,6,5,4,1],[0,2,3,5,6,7,1],[0,4,3,6,7,2,1],[0,4,5,3,2,7,1],[0,4,5,6,3,2,1]],
		[[1,2,3,4,5,6,7],[0,3,4,5,6,7,2],[0,1,6,7,4,5,3],[0,2,7,4,5,6,1],[0,3,2,7,5,6,1],[0,3,2,4,7,6,1],[0,3,4,5,7,2,1],[0,6,5,4,3,2,1]],
		[[1,2,3,4,5,6,7],[0,3,4,5,7,6,2],[0,1,7,6,4,3,5],[0,2,6,4,5,7,1],[0,3,2,6,5,7,1],[0,2,3,4,6,7,1],[0,5,4,3,2,1,7],[0,3,4,5,6,2,1]],
		[[1,2,3,4,5,6,7],[0,3,4,5,7,6,2],[0,1,7,6,3,5,4],[0,2,6,5,4,7,1],[0,2,3,6,5,7,1],[0,4,2,3,6,7,1],[0,5,4,3,2,1,7],[0,3,4,5,6,2,1]],
		[[1,2,3,4,5,6,7],[0,3,4,5,7,6,2],[0,1,7,6,5,3,4],[0,2,6,5,4,7,1],[0,2,3,6,5,7,1],[0,4,3,2,6,7,1],[0,5,4,3,2,1,7],[0,3,4,5,6,2,1]],
		[[1,2,3,4,5,6,7],[0,3,4,5,6,7,2],[0,1,6,5,7,3,4],[0,2,7,6,5,4,1],[0,2,3,5,6,7,1],[0,4,3,7,2,6,1],[0,4,5,3,7,2,1],[0,4,6,5,3,2,1]],
		[[1,2,3,4,5,6,7],[0,3,4,5,6,7,2],[0,1,6,7,5,3,4],[0,2,7,5,4,6,1],[0,2,3,7,5,6,1],[0,4,3,2,7,6,1],[0,3,4,5,7,2,1],[0,6,5,4,3,2,1]],
		[[1,2,3,4,5,6,7],[0,3,4,6,7,5,2],[0,1,7,5,6,3,4],[0,2,5,6,4,7,1],[0,2,3,5,6,7,1],[0,4,3,2,1,7,6],[0,4,3,2,5,7,1],[0,3,4,6,5,2,1]],
		[[1,2,3,4,5,6,7],[0,3,4,5,6,7,2],[0,1,5,7,6,3,4],[0,2,7,6,4,5,1],[0,2,3,7,6,5,1],[0,3,4,6,7,2,1],[0,5,4,3,2,7,1],[0,5,6,4,3,2,1]],
		[[1,2,3,4,5,6,7],[0,3,4,5,6,7,2],[0,1,5,7,6,3,4],[0,2,7,6,5,4,1],[0,2,3,7,6,5,1],[0,4,3,6,7,2,1],[0,5,4,3,2,7,1],[0,5,6,4,3,2,1]],
		[[1,2,3,4,5,6,7],[0,3,4,5,6,7,2],[0,1,6,7,4,5,3],[0,2,7,6,4,5,1],[0,3,2,7,6,5,1],[0,3,2,4,7,6,1],[0,5,4,3,7,2,1],[0,6,5,4,3,2,1]],
		[[1,2,3,4,5,6,7],[0,3,4,5,6,7,2],[0,1,5,7,6,3,4],[0,2,7,6,4,5,1],[0,2,3,6,7,5,1],[0,3,4,6,7,2,1],[0,5,4,3,2,7,1],[0,5,4,6,3,2,1]],
		[[1,2,3,4,5,6,7],[0,3,4,5,6,7,2],[0,1,4,5,7,6,3],[0,2,7,6,4,5,1],[0,3,6,7,5,2,1],[0,3,4,6,7,2,1],[0,5,4,3,2,7,1],[0,5,4,6,3,2,1]],
		[[1,2,3,4,5,6,7],[0,4,5,6,7,2,3],[0,1,6,5,7,4,3],[0,1,5,6,2,7,4],[0,3,2,7,5,6,1],[0,4,7,2,6,3,1],[0,4,5,7,2,3,1],[0,6,5,4,3,2,1]],
		[[1,2,3,4,5,6,7],[0,3,4,5,7,6,2],[0,1,7,6,4,5,3],[0,2,6,7,4,5,1],[0,3,2,6,7,5,1],[0,3,2,4,6,7,1],[0,5,4,3,2,1,7],[0,5,4,3,6,2,1]],
		[[1,2,3,4,5,6,7],[0,4,5,6,7,2,3],[0,1,6,7,4,3,5],[0,1,2,7,6,4,5],[0,3,2,7,6,5,1],[0,2,3,4,6,7,1],[0,5,4,3,7,2,1],[0,5,6,4,3,2,1]],
		[[1,2,3,4,5,6,7],[0,4,5,6,7,2,3],[0,1,6,5,7,4,3],[0,1,2,7,5,6,4],[0,3,2,7,5,6,1],[0,4,3,7,2,6,1],[0,4,3,5,7,2,1],[0,6,5,4,3,2,1]],
		[[1,2,3,4,5,6,7],[0,3,4,5,7,6,2],[0,1,7,6,3,5,4],[0,2,6,7,5,4,1],[0,2,3,6,7,5,1],[0,4,2,3,6,7,1],[0,5,4,3,2,1,7],[0,5,4,3,6,2,1]],
		[[1,2,3,4,5,6,7],[0,3,4,6,5,7,2],[0,1,6,7,5,3,4],[0,2,7,5,4,6,1],[0,2,3,7,5,6,1],[0,4,3,2,7,1,6],[0,3,4,5,7,2,1],[0,6,5,4,3,2,1]],
		[[1,2,3,4,5,6,7],[0,3,4,7,5,6,2],[0,1,7,6,5,3,4],[0,2,6,5,4,7,1],[0,2,3,5,6,7,1],[0,4,3,2,6,1,7],[0,4,5,3,2,1,7],[0,3,4,5,6,2,1]],
		[[1,2,3,4,5,6,7],[0,4,5,6,7,3,2],[0,1,6,7,3,5,4],[0,2,1,6,7,5,4],[0,2,3,7,5,6,1],[0,4,2,3,7,6,1],[0,4,5,7,3,2,1],[0,6,5,4,3,2,1]],
		[[1,2,3,4,5,6,7],[0,4,5,6,7,2,3],[0,1,6,7,3,5,4],[0,1,2,6,7,5,4],[0,2,3,7,5,6,1],[0,4,2,3,7,6,1],[0,4,5,7,3,2,1],[0,6,5,4,3,2,1]],
		[[1,2,3,4,5,6,7],[0,3,4,5,6,7,2],[0,1,6,5,7,3,4],[0,2,7,6,5,4,1],[0,2,3,7,6,5,1],[0,4,3,7,2,6,1],[0,5,4,3,7,2,1],[0,6,5,4,3,2,1]],
		[[1,2,3,4,5,6,7],[0,4,5,6,7,2,3],[0,1,6,5,7,3,4],[0,1,2,7,6,5,4],[0,2,3,7,6,5,1],[0,4,3,7,2,6,1],[0,5,4,3,7,2,1],[0,6,5,4,3,2,1]],
		[[1,2,3,4,5,6,7],[0,4,5,6,7,2,3],[0,1,5,7,6,3,4],[0,1,2,7,6,4,5],[0,2,3,7,6,5,1],[0,3,4,6,7,2,1],[0,5,4,3,2,7,1],[0,5,6,4,3,2,1]],
		[[1,2,3,4,5,6,7],[0,3,4,6,7,5,2],[0,1,7,6,5,3,4],[0,2,5,7,6,4,1],[0,2,3,5,7,6,1],[0,4,3,2,1,7,6],[0,4,3,5,2,7,1],[0,6,4,3,5,2,1]],
		[[1,2,3,4,5,6,7],[0,3,4,7,5,6,2],[0,1,7,6,5,3,4],[0,2,6,5,4,7,1],[0,2,3,6,5,7,1],[0,4,3,2,6,1,7],[0,5,4,3,2,1,7],[0,3,4,5,6,2,1]],
		[[1,2,3,4,5,6,7],[0,3,4,7,5,6,2],[0,7,1,5,6,4,3],[0,2,6,5,4,7,1],[0,3,2,6,5,7,1],[0,4,3,6,2,1,7],[0,5,4,3,2,1,7],[0,3,4,5,6,1,2]],
		[[1,2,3,4,5,6,7],[0,3,4,5,7,6,2],[0,1,7,6,5,3,4],[0,2,6,7,5,4,1],[0,2,3,6,7,5,1],[0,4,3,2,6,7,1],[0,5,4,3,2,1,7],[0,5,4,3,6,2,1]],
		[[1,2,3,4,5,6,7],[0,4,5,6,7,2,3],[0,1,5,7,6,3,4],[0,1,2,7,6,5,4],[0,2,3,7,6,5,1],[0,4,3,6,7,2,1],[0,5,4,3,2,7,1],[0,5,6,4,3,2,1]],
		[[1,2,3,4,5,6,7],[0,3,4,5,7,6,2],[0,1,7,6,4,3,5],[0,2,6,7,4,5,1],[0,3,2,6,7,5,1],[0,2,3,4,6,7,1],[0,5,4,3,2,1,7],[0,5,4,3,6,2,1]],
		[[1,2,3,4,5,6,7],[0,3,4,6,7,5,2],[0,1,7,5,6,3,4],[0,2,5,7,6,4,1],[0,2,3,5,7,6,1],[0,4,3,2,1,7,6],[0,4,3,2,5,7,1],[0,6,4,3,5,2,1]],
		[[1,2,3,4,5,6,7],[0,4,5,6,7,2,3],[0,1,6,7,5,3,4],[0,1,2,7,6,5,4],[0,2,3,7,6,5,1],[0,4,3,2,7,6,1],[0,5,4,3,7,2,1],[0,6,5,4,3,2,1]],
		[[1,2,3,4,5,6,7],[0,3,4,5,6,7,2],[0,1,6,7,5,3,4],[0,2,7,6,5,4,1],[0,2,3,7,6,5,1],[0,4,3,2,7,6,1],[0,5,4,3,7,2,1],[0,6,5,4,3,2,1]],
		[[1,2,3,4,5,6,7],[0,3,4,7,6,5,2],[0,1,7,5,6,3,4],[0,2,5,6,7,4,1],[0,2,3,5,6,7,1],[0,4,3,2,1,7,6],[0,4,3,2,5,1,7],[0,4,3,6,5,2,1]],
		[[1,2,3,4,5,6,7],[0,3,4,7,6,5,2],[0,1,5,7,6,3,4],[0,2,5,6,7,4,1],[0,2,3,5,6,7,1],[0,4,3,2,1,7,6],[0,4,3,2,5,1,7],[0,4,3,6,2,5,1]],
		[[1,2,3,4,5,6,7],[0,4,5,6,7,2,3],[0,1,5,6,7,3,4],[0,1,2,6,7,5,4],[0,2,3,7,6,5,1],[0,4,3,7,6,2,1],[0,5,4,7,3,2,1],[0,6,5,4,3,2,1]],
		[[1,2,3,4,5,6,7],[0,4,5,6,7,2,3],[0,1,6,5,7,3,4],[0,1,2,6,7,5,4],[0,2,3,7,6,5,1],[0,4,3,7,2,6,1],[0,5,4,7,3,2,1],[0,6,5,4,3,2,1]],
		[[1,2,3,4,5,6,7],[0,4,5,6,7,2,3],[0,1,6,7,4,3,5],[0,1,2,6,7,4,5],[0,3,2,7,6,5,1],[0,2,3,4,7,6,1],[0,5,4,7,3,2,1],[0,6,5,4,3,2,1]],
		[[1,2,3,4,5,6,7],[0,4,5,6,7,2,3],[0,1,6,7,4,5,3],[0,1,2,6,7,4,5],[0,3,2,7,6,5,1],[0,3,2,4,7,6,1],[0,5,4,7,3,2,1],[0,6,5,4,3,2,1]],
		[[1,2,3,4,5,6,7],[0,4,5,6,7,2,3],[0,1,6,7,4,3,5],[0,1,2,7,6,4,5],[0,3,2,7,6,5,1],[0,2,3,4,7,6,1],[0,5,4,3,7,2,1],[0,6,5,4,3,2,1]],
		[[1,2,3,4,5,6,7],[0,4,5,6,7,2,3],[0,1,6,7,3,4,5],[0,1,2,6,7,5,4],[0,2,3,7,6,5,1],[0,2,4,3,7,6,1],[0,5,4,7,3,2,1],[0,6,5,4,3,2,1]],
		[[1,2,3,4,5,6,7],[0,3,4,7,5,6,2],[0,1,6,7,5,3,4],[0,2,6,5,7,4,1],[0,2,3,6,5,7,1],[0,4,3,2,6,1,7],[0,5,4,3,2,1,7],[0,4,3,5,2,6,1]],
		[[1,2,3,4,5,6,7],[0,4,5,6,7,2,3],[0,1,6,7,3,5,4],[0,1,2,6,7,5,4],[0,2,3,7,6,5,1],[0,4,2,3,7,6,1],[0,5,4,7,3,2,1],[0,6,5,4,3,2,1]],
		[[1,2,3,4,5,6,7],[0,4,5,6,7,2,3],[0,1,6,7,5,4,3],[0,1,2,7,6,4,5],[0,3,2,7,6,5,1],[0,3,4,2,7,6,1],[0,5,4,3,7,2,1],[0,6,5,4,3,2,1]],
		[[1,2,3,4,5,6,7],[0,3,4,6,5,7,2],[0,1,7,6,5,3,4],[0,2,7,5,6,4,1],[0,2,3,7,5,6,1],[0,4,3,2,7,1,6],[0,4,3,5,2,7,1],[0,6,5,4,3,2,1]],
		[[1,2,3,4,5,6,7],[0,3,4,7,5,6,2],[0,1,7,6,5,3,4],[0,2,6,5,7,4,1],[0,2,3,6,5,7,1],[0,4,3,2,6,1,7],[0,5,4,3,2,1,7],[0,4,3,5,6,2,1]],
		[[1,2,3,4,5,6,7],[0,5,4,7,6,2,3],[0,1,7,6,4,3,5],[0,1,2,7,6,4,5],[0,3,2,6,7,1,5],[0,2,3,4,6,7,1],[0,5,4,3,2,1,7],[0,5,4,6,3,2,1]],
		[[1,2,3,4,5,6,7],[0,4,5,7,6,2,3],[0,1,7,6,4,3,5],[0,1,2,7,6,4,5],[0,3,2,6,7,5,1],[0,2,3,4,6,7,1],[0,5,4,3,2,1,7],[0,5,4,6,3,2,1]],
		[[1,2,3,4,5,6,7],[0,4,5,7,6,2,3],[0,1,7,6,5,4,3],[0,1,2,7,6,4,5],[0,3,2,6,7,5,1],[0,3,4,2,6,7,1],[0,5,4,3,2,1,7],[0,5,4,6,3,2,1]],
		[[1,2,3,4,5,6,7],[0,4,5,7,6,2,3],[0,1,7,6,3,4,5],[0,1,2,7,6,5,4],[0,2,3,6,7,5,1],[0,2,4,3,6,7,1],[0,5,4,3,2,1,7],[0,5,4,6,3,2,1]],
	]
_fconvex_obstructions8strs = set(RotationSystem.RotationSystem(8,o).to_string() for o in _fconvex_obstructions8)


def test_convex(rs,DEBUG=False):
	for sub_rs in rs.enumerate_sub_rotation_systems(5):
		sub_rs = sub_rs.calculate_lexmin()
		if sub_rs.orientations[3][3] == 2:
			if DEBUG: print "convex obstruction 5"
			return False
	return True

def test_hconvex(rs,DEBUG=False,test_convexity=True):
	if test_convexity:
		if not test_convex(rs,DEBUG=DEBUG):
			return False
	for sub_rs in rs.enumerate_sub_rotation_systems(6):
		sub_rs = sub_rs.calculate_lexmin()
		if sub_rs.to_string() == _hconvex_obstruction6str:
			if DEBUG: print "hconvex_obstructions6"
			return False
	return True

def test_fconvex(rs,DEBUG=False,test_hconvexity=True):
	if test_hconvexity:
		if not test_hconvex(rs,DEBUG=DEBUG,test_convexity=True):
			return False
	for sub_rs in rs.enumerate_sub_rotation_systems(7):
		sub_rs = sub_rs.calculate_lexmin()
		if sub_rs.to_string() in _fconvex_obstructions7strs:
			if DEBUG: print "fconvex_obstructions7"
			return False
	for sub_rs in rs.enumerate_sub_rotation_systems(8):
		sub_rs = sub_rs.calculate_lexmin()
		if sub_rs.to_string() in _fconvex_obstructions8strs:
			if DEBUG: print "fconvex_obstructions8"
			return False
	return True

